name: "LeNet"
layer {
  name: "mnist"
  type: "HDF5Data"
  top: "data"
  top: "label"
  top: "gradients"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "examples/mnist/dushy/train_mnist.txt"
    batch_size: 64 
  }
}
layer {
  name: "mnist"
  type: "HDF5Data"
  top: "data"
  top: "label"
  top: "gradients"
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "examples/mnist/dushy/test_mnist.txt"
    batch_size: 100
  }
}
layer {
  name: "go_conv1"
  type: "GradOrientConvolution"
  bottom: "data"
  bottom: "gradients"
  top: "go_conv1"
  top: "sc_orient1"
  top: "smooth_grad1"

  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 15 
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer{
  name: "concat1"
  type: "Concat"
  bottom: "go_conv1"
  bottom: "sc_orient1"
  top: "conv1"
  concat_param{
	concat_dim: 1
	}
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "pool1_2"
  type: "Pooling"
  bottom: "smooth_grad1"
  top: "pooled_gradients1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "go_conv2"
  type: "GradOrientConvolution"
  bottom: "pool1"
  bottom: "pooled_gradients1"
  top: "go_conv2"
  top: "sc_orient2"
  top: "smooth_grad2"

  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 30
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer{
  name: "concat2"
  type: "Concat"
  bottom: "go_conv2"
  bottom: "sc_orient2"
  top: "conv2"
  concat_param{
	concat_dim: 1
	}
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "pool2_2"
  type: "Pooling"
  bottom: "smooth_grad2"
  top: "pooled_gradients2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer{
  name: "silencestray"
  type: "Silence"
  bottom: "pooled_gradients2"
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
